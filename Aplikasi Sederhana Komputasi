Komputasi Geofisika Part 2.txt

Jenis
Teks
Ukuran
4 KB (4.174 bita)
Penyimpanan yang digunakan
4 KB (4.174 bita)
Lokasi
Colab Notebooks
Pemilik
saya
Diubah
17 Nov 2019 oleh saya
Dibuka
09.08 oleh saya
Dibuat
17 Nov 2019 dengan Google Drive Web
Tambahkan deskripsi
Pemirsa dapat mendownload
# -*- coding: utf-8 -*-
"""
Created on Mon Apr 15 15:40:59 2019

@author: MARYADI
"""


# Program untuk menghitung nilai fungsi
def fungsi(x):
    y = x**3 - 12.0*x + 30
    return y

# Program untuk menentukan tebakan awal
def tebakan(x1,x2):
    fx1 = fungsi(x1)
    fx2 = fungsi(x2)
    if fx1*fx2 < 0:
        print 'Tebakan Benar!'
        return False
    else:
        print 'Coba lagi!'
        return True

x1, x2 = input("Masukan tebakan awal! ")

while tebakan(x1,x2):
    x1,x2 = input("Masukkan tebakan yang lain! ")

# Stoping Criteria
iterasi = input("Masukkan jumlah iterasi! ")
errormin = input("Masukkan error minimal! ")
# Iterasi akan berhenti ketika perubahan nilai tebakan sangat kecil

print ""
print "Iterasi Xr \t Fr" # Header

for i in range(iterasi):
    f1 = fungsi(x1)
    f2 = fungsi(x2)
    xr = (x1+x2)/2.0
    fr = fungsi(xr)
    
    print '{} \t {} \t {}'.format(i+1,xr,fr)
    
    if f1*fr > 0:
        if abs(x1-xr) <= errormin:
            break
        else:
            x1 = xr
    else:
        if abs(x2-xr) <= errormin:
            break
        else:
            x2 = xr
        

# -*- coding: utf-8 -*-
"""
Created on Mon Apr 22 14:21:15 2019

@author: Geosains-UI

File ini berisi data
"""
import reglin # nama file yang berisi fungsi regresi

x = [1,3,5,7,9,11,13,15,17,19]
y = [20,18,16,15,11,10,8,7,5,3]

reglin.reglin(x,y) # panggil fungsi regresinya dari dalam file
# -*- coding: utf-8 -*-
"""
Created on Mon Apr 22 14:14:59 2019

@author: Geosains-UI

Fungsi regresi linear
"""

import matplotlib.pyplot as plt
import numpy as np

def reglin(x,y):
    
    # mempersiapkan frame-nya
    plt.figure(figsize=(9,6))
    # plot datanya
    plt.scatter(x,y,linewidths=12)
    
    """ Hitung nilai rata-rata """
    # Nilai awal sumasi
    sumx = 0
    sumy = 0
    for i in range(len(x)):
        sumx = sumx + x[i] # menghitung total nilai x
        sumy = sumy + y[i] # menghitung total nilai y
    
    xr = float(sumx)/len(x) # nilai rata-rata x
    yr = float(sumy)/len(y) # nilai rata-rata y  
    
    """ Hitung m (gradien) """
    # Nilai awal sumasi
    pembilang = 0
    penyebut = 0
    
    for i in range(len(x)):
        pembilang = pembilang + (x[i]-xr)*(y[i]-yr)
        penyebut = penyebut + (x[i]-xr)**2
    
    m = pembilang/penyebut # rumus gradien
    c = yr - m*xr          # rumus intercept
    
    print 'y = ',m,'x + ',c
    
    " Plot kurva regresi "
    
    # Membuat domain x sebanyak 100 dalam range 0 s/d 6
    X = np.linspace(min(x),max(x),100)
    Y = m*X + c # Hitung nilai Y untuk masing-masing X
    
    plt.plot(X,Y,'r-')
    plt.title(' Regresi Linear ')
    plt.xlabel(' Waktu (t) ')
    plt.ylabel(' Perpindahan (m) ')
    plt.savefig(r'C:\Users\Geosains-UI\Desktop\regresi.png',dpi=300)

# -*- coding: utf-8 -*-
"""
Created on Mon Apr 22 13:35:45 2019

@author: Geosains-UI
"""

import matplotlib.pyplot as plt

# Data awal
x = [1,2,3,4,5]
y = [3,4,5,4,4.5]

# mempersiapkan frame-nya
plt.figure(figsize=(9,6))
# plot datanya
plt.scatter(x,y,linewidths=12)

""" Hitung nilai rata-rata """
# Nilai awal sumasi
sumx = 0
sumy = 0
for i in range(len(x)):
    sumx = sumx + x[i] # menghitung total nilai x
    sumy = sumy + y[i] # menghitung total nilai y

xr = float(sumx)/len(x) # nilai rata-rata x
yr = float(sumy)/len(y) # nilai rata-rata y  

""" Hitung m (gradien) """
# Nilai awal sumasi
pembilang = 0
penyebut = 0

for i in range(len(x)):
    pembilang = pembilang + (x[i]-xr)*(y[i]-yr)
    penyebut = penyebut + (x[i]-xr)**2

m = pembilang/penyebut # rumus gradien
c = yr - m*xr          # rumus intercept

print 'y = ',m,'x + ',c

" Plot kurva regresi "

import numpy as np
# Membuat domain x sebanyak 100 dalam range 0 s/d 6
X = np.linspace(min(x),max(x),100)
Y = m*X + c # Hitung nilai Y untuk masing-masing X

plt.plot(X,Y,'r-')
plt.title(' Regresi Linear ')
plt.xlabel(' Waktu (t) ')
plt.ylabel(' Perpindahan (m) ')
plt.savefig(r'C:\Users\Geosains-UI\Desktop\regresi.png',dpi=300)


